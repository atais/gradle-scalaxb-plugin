plugins {
    id "com.github.maiflai.scalatest" version "0.29"
    id "com.github.hierynomus.license" version "0.15.0"
    id "com.diffplug.spotless" version "5.8.2"
    id "com.gradle.plugin-publish" version "0.12.0"
}

group = projectGroup
version = projectVersion

apply plugin: 'java-gradle-plugin'
apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply from: 'libs.gradle'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
    compile libs.scala
    testCompile libs.scalaTest
    testCompile libs.pegdown
}

sourceSets {
    funcTest {
        scala.srcDir file('src/funcTest/scala')
        resources.srcDir file('src/funcTest/resources')
        compileClasspath += sourceSets.main.output + configurations.testRuntime
        runtimeClasspath += output + compileClasspath
    }
}

task funcTest(type: Test) {
    description = 'Runs the functional tests.'
    group = 'verification'
    testClassesDirs = sourceSets.funcTest.output.classesDirs
    classpath = sourceSets.funcTest.runtimeClasspath

    maxParallelForks = 1
}
check.dependsOn funcTest

gradlePlugin {
    testSourceSets sourceSets.funcTest
}

license {
    header = file('LICENSE')
    strictCheck = true
    skipExistingHeaders = false

    excludes(['**/generated/**/*.scala',
              '**/*.xml',
              '**/*.xsd'])

    ext.year = Calendar.getInstance().get(Calendar.YEAR)
    ext.name = 'Oleksii Lisikh'
    ext.email = 'alisiikh@gmail.com'
}

spotless {
    scala {
        scalafmt('2.6.1').configFile('.scalafmt.conf')
    }
    format 'misc', {
        target '**/*.gradle', '**/*.properties'
        indentWithSpaces()
        trimTrailingWhitespace()
        endWithNewline()
    }
}

task licenseAndFormat {
    dependsOn 'licenseFormat', 'spotlessApply'
}

pluginBundle {
    mavenCoordinates {
        groupId = projectGroup
    }

    website = projectGithub
    vcsUrl = projectGithub
    description = pluginDescription
    tags = ['scalaxb', 'scala', 'xml', 'binding']

    plugins {
        scalaxbPlugin {
            id = 'com.github.alisiikh.scalaxb'
            displayName = pluginDescription
        }
    }
}
